@model CommunityBackend.Models.WithdrawRequest

@{
    Layout = "~/Views/Shared/_layoutForFrame.cshtml";
    ViewBag.Title = "确认";
}

<h2>确认</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>确认提现请求</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.WithdrawRequestID)

        <div class="form-group">
            @Html.LabelFor(model => model.RequestTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestTime, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
                @Html.ValidationMessageFor(model => model.RequestTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sum, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
                @Html.ValidationMessageFor(model => model.Sum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control", @readOnly = "readOnly" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CraftmanID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CraftmanID", null, htmlAttributes: new { @class = "form-control", @readOnly = "readOnly" })
                @Html.ValidationMessageFor(model => model.CraftmanID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MerchantID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MerchantID", null, htmlAttributes: new { @class = "form-control", @readOnly = "readOnly" })
                @Html.ValidationMessageFor(model => model.MerchantID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankAccName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccName, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
                @Html.ValidationMessageFor(model => model.BankAccName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
                @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpenBank, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpenBank, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
                @Html.ValidationMessageFor(model => model.OpenBank, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Wiexin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Wiexin, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
                @Html.ValidationMessageFor(model => model.Wiexin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alipay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Alipay, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
                @Html.ValidationMessageFor(model => model.Alipay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Finished, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Finished)
                    @Html.ValidationMessageFor(model => model.Finished, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="确认" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回管理页", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
