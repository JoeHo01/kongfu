@using CommunityBackend.Tool;
@model CommunityBackend.Models.Ware

@{
    Layout = "~/Views/Shared/_layoutForFrame.cshtml";
    ViewBag.Title = "编辑";
}

<h2>编辑</h2>


@using (Html.BeginForm("Edit", "SelfWares", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>商品</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationMessage("CustomError", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.WareID)

        <div class="form-group">
            @Html.LabelFor(model => model.WareTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("WareTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WareTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recommended, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Recommended)
                    @Html.ValidationMessageFor(model => model.Recommended, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WareName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WareName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WareName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brief, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brief, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brief, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSpecialPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSpecialPrice)
                    @Html.ValidationMessageFor(model => model.IsSpecialPrice, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpecialPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpecialPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MarketPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MarketPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MarketPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImgExtName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/*" name="ImgExtName" id="ImgExtName" value="" />
            </div>
                @WareImageTool.GetWareImage(Model)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImgExtName0, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/*" name="ImgExtName0" id="ImgExtName0" value="" />
                @WareImageTool.GetWareRollingImage(Model, 0)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImgExtName1, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/*" name="ImgExtName1" id="ImgExtName1" value="" />
                @WareImageTool.GetWareRollingImage(Model, 1)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImgExtName2, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/*" name="ImgExtName2" id="ImgExtName2" value="" />
                @WareImageTool.GetWareRollingImage(Model, 2)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImgExtName3, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/*" name="ImgExtName3" id="ImgExtName3" value="" />
                @WareImageTool.GetWareRollingImage(Model, 3)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImgExtName4, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/*" name="ImgExtName4" id="ImgExtName4" value="" />
                @WareImageTool.GetWareRollingImage(Model, 4)
            </div>
        </div> 

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回目录", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
